name: Build APK

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

env:
  APKPATH: ${{ github.workspace }}/V2rayXG/app/build/outputs/apk/debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Golang
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.2'

    - name: Install gomobile
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH


    - name: Setup Android environment
      uses: android-actions/setup-android@v3


    - name: Build dependencies
      run: |
        mkdir ${{ github.workspace }}/build
        cd ${{ github.workspace }}/build
        git clone --depth=1 -b main https://github.com/LuckyLuke-a/AndroidLibXrayLite.git
        cd AndroidLibXrayLite
        mkdir -p assets data
        bash gen_assets.sh download
        cp -v data/*.dat assets/
        go mod tidy -v
        gomobile init
        gomobile bind -v -androidapi 21 -ldflags='-s -w' ./
        cp *.aar ${{ github.workspace }}/V2rayXG/app/libs/
      shell: bash

    - name: Build APK
      run: |
        cd ${{ github.workspace }}/V2rayXG
        chmod 755 gradlew
        ./gradlew assembleDebug
      shell: bash

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: apk
        path: ${{ env.APKPATH }}/*

    - name: Upload to Github releases
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.APKPATH }}/*.apk
        tag: ${{ github.ref }}
        file_glob: true
